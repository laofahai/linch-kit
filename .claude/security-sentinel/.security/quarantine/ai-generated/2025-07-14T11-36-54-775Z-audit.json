{
  "sessionId": "default",
  "generatedAt": "2025-07-14T11:36:54.774Z",
  "codeSnippets": [
    {
      "content": "\n        eval(\"malicious code\");\n        process.exec(\"rm -rf /\");\n      ",
      "filePath": "ai-generated.ts",
      "riskScore": 100,
      "threats": [
        {
          "fileName": "ai-generated.ts",
          "filePath": "ai-generated.ts",
          "threatType": "code_injection",
          "severity": "critical",
          "description": "代码注入漏洞：检测到可能的动态代码执行",
          "line": 2,
          "column": 8,
          "code": "eval(\"malicious code\");",
          "recommendation": "避免使用eval、new Function等动态代码执行，使用安全的替代方案",
          "autoFixAvailable": false,
          "riskScore": 90
        },
        {
          "fileName": "ai-generated.ts",
          "filePath": "ai-generated.ts",
          "threatType": "command_injection",
          "severity": "critical",
          "description": "命令注入漏洞：检测到可能的系统命令执行",
          "line": 3,
          "column": 16,
          "code": "process.exec(\"rm -rf /\");",
          "recommendation": "避免直接执行系统命令，使用安全的API替代",
          "autoFixAvailable": false,
          "riskScore": 95
        }
      ]
    }
  ],
  "overallRiskScore": 100,
  "securityPatterns": [
    {
      "pattern": "eval使用",
      "violations": 1,
      "severity": "critical"
    }
  ],
  "recommendations": [
    "避免在AI生成代码中使用动态代码执行",
    "对AI生成代码进行人工安全审查",
    "使用静态分析工具验证代码安全性"
  ]
}